# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.

version: '3.7'

services:
  commander-backend:
    image: mcr.microsoft.com/dotnet/core/sdk:3.1
    container_name: commander-backend
    environment:
      ASPNETCORE_URLS: "http://+:80"
      ASPNETCORE_ENVIRONMENT: Development
      DOTNET_USE_POLLING_FILE_WATCHER : 1
    volumes:
      - ~/.vsdbg:/remote_debugger:rw
      - ./Commander:/Commander
    ports:
      - "5000:80"
    working_dir: /Commander
    command: bash -c "dotnet restore && dotnet watch run --no-launch-profile"
    depends_on: 
      - mssql

  commander-frontend:
    container_name: commander-frontend
    build:
      context: ./commander-frontend
      dockerfile: Dockerfile
    volumes:
       - ./commander-frontend:/usr/src/app/commander-frontend
       - /usr/src/app/commander-frontend/node_modules
    ports: 
      - "3001:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - COMPOSE_CONVERT_WINDOWS_PATHS=1
    stdin_open: true   
    depends_on: 
      - commander-backend

  mssql:
    container_name: mssql
    build:
      context: ./Database
      dockerfile: Dockerfile
    user: root
    environment:
      "ACCEPT_EULA": "Y"
      "SA_PASSWORD": "${MSSQL_PASSWORD}"
    ports:  
      - ${MSSQL_PORT:-1433}:1433
    volumes: 
      - ${MSSQL_DATA_DIR}:/var/opt/sqlserver/data
      - ${MSSQL_LOG_DIR}:/var/opt/sqlserver/log
      - ${MSSQL_BACKUP_DIR}:/var/opt/sqlserver/backup
    healthcheck:
      test: ['CMD', '/opt/mssql-tools/bin/sqlcmd', '-U', 'sa', '-P', '${MSSQL_PASSWORD}', '-Q', 'select 1']
      interval: 10s
      timeout: 3s
      retries: 2
